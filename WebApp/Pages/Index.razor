@page "/"
@using Library.UseCaseInterfaces.IDashboard
@attribute [Authorize(Policy = "Admin")]

@inject IJSRuntime JSRuntime
@inject IGetEstatisticasDashboard GetEstatisticasDashboard
<div class="py-4">
    <div class="row">
        <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
            <div class="card">
                <div class="card-body p-3">
                    <div class="row">
                        <div class="col-8">
                            <div class="numbers">
                                <p class="text-sm mb-0 text-capitalize font-weight-bold">Lucro Diário</p>
                                <h5 class="font-weight-bolder mb-0">
                                    @(string.Format("R${0:#,###.##}", ganhoDiario))
                                    <span class="@colorGanhoDia text-sm font-weight-bolder">@(string.Format("{0:P0}", porcentagemDiario))</span>
                                </h5>
                            </div>
                        </div>
                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-dark shadow text-center border-radius-md">
                                <i class="ni ni-money-coins text-lg opacity-10" aria-hidden="true"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
            <div class="card">
                <div class="card-body p-3">
                    <div class="row">
                        <div class="col-8">
                            <div class="numbers">
                                <p class="text-sm mb-0 text-capitalize font-weight-bold">Acessos De Hoje</p>
                                <h5 class="font-weight-bolder mb-0">
                                    2,300
                                    <span class="text-success text-sm font-weight-bolder">+3%</span>
                                </h5>
                            </div>
                        </div>
                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-dark shadow text-center border-radius-md">
                                <i class="ni ni-world text-lg opacity-10" aria-hidden="true"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
            <div class="card">
                <div class="card-body p-3">
                    <div class="row">
                        <div class="col-8">
                            <div class="numbers">
                                <p class="text-sm mb-0 text-capitalize font-weight-bold">Novos Clientes</p>
                                <h5 class="font-weight-bolder mb-0">
                                    +3,462
                                    <span class="text-danger text-sm font-weight-bolder">-2%</span>
                                </h5>
                            </div>
                        </div>
                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-dark shadow text-center border-radius-md">
                                <i class="ni ni-paper-diploma text-lg opacity-10" aria-hidden="true"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6">
            <div class="card">
                <div class="card-body p-3">
                    <div class="row">
                        <div class="col-8">
                            <div class="numbers">
                                <p class="text-sm mb-0 text-capitalize font-weight-bold">Ganhos do Mês</p>
                                <h5 class="font-weight-bolder mb-0">
                                    @(string.Format("R${0:#,###.##}", ganhoMes))
                                    <span class="@colorGanhoMes text-sm font-weight-bolder">@(string.Format("{0:P0}", porcentagemMensal))</span>
                                </h5>
                            </div>
                        </div>
                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-dark shadow text-center border-radius-md">
                                <i class="ni ni-cart text-lg opacity-10" aria-hidden="true"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@code {

    private IEnumerable<Transaction> totalTransacoes;
    private IEnumerable<Transaction> totalTransacoesMesPassado;
    private IEnumerable<Transaction> totalDiario;
    private IEnumerable<Transaction> totalDiarioAnterior;
    private double ganhoMes;
    private double ganhoDiario;
    private double ganhoMesAnterior;
    private double ganhoDiarioAnterior;
    private double porcentagemMensal;
    private double porcentagemDiario;
    private string colorGanhoMes;
    private string colorGanhoDia;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        totalTransacoes = GetEstatisticasDashboard.ValorTotalTransacoes(DateTime.Now);
        totalTransacoesMesPassado = GetEstatisticasDashboard.ValorTotalTransacoesAnteriores(DateTime.Now);

        totalDiario = GetEstatisticasDashboard.ValorTotalDiario(DateTime.Now);
        totalDiarioAnterior = GetEstatisticasDashboard.ValorTotalDiarioAnteriores(DateTime.Now);

        ganhoMes = totalTransacoes.Sum(x => x.Preco * x.QuantidadeVendida);
        ganhoMesAnterior = totalTransacoesMesPassado.Sum(x => x.Preco * x.QuantidadeVendida);

        ganhoDiario = totalDiario.Sum(x => x.Preco * x.QuantidadeVendida);
        ganhoDiarioAnterior = totalDiarioAnterior.Sum(x => x.Preco * x.QuantidadeVendida);

        CalculaPorcentagem();
    }

    private void CalculaPorcentagem()
    {
        if(ganhoMes != 0 || ganhoMesAnterior != 0)
            porcentagemMensal = (ganhoMes - ganhoMesAnterior) / ganhoMesAnterior;
        if (ganhoDiario != 0 || ganhoDiarioAnterior != 0)
            porcentagemDiario = (ganhoDiario - ganhoDiarioAnterior) / ganhoDiarioAnterior;

        if (double.IsInfinity(porcentagemDiario))
            porcentagemDiario = 0;
        if (double.IsInfinity(porcentagemMensal))
            porcentagemDiario = 0;

        colorGanhoMes = porcentagemMensal < 0 ? "text-danger" : "text-success";
        colorGanhoDia = porcentagemDiario < 0 ? colorGanhoDia = "text-danger" : "text-success";
    }
}