@page "/produtos/{PageNumber:int}"
@attribute [Authorize(Policy = "Admin")]

@inject NavigationManager NavigationManager
@inject IViewProdutos ViewProdutos
@inject IGetCategoryById GetCategoryById
@inject IDeleteProduto DeleteProduto
@inject IGetProdutosToPaged ProdutosToPaged

<h3>Produtos</h3>
<br />
@if (produtos != null)
{
    <table id="produtos" class="table table-bordered">
        <thead>
            <tr>
                <th>Categoria</th>
                <th>Nome</th>
                <th>Quantidade</th>
                <th>Preço</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in produtos)
            {
                <tr>
                    <td>@GetCategoryById.Execute(product.CategoryId.Value)?.Name</td>
                    <td>@product.Name</td>
                    <td>@product.Quantidade</td>
                    <td>@(string.Format("{0:c}", Math.Round(product.Preco.Value, 2)))</td>
                    <td>
                        <button type="button" class="btn btn-link text-danger px-3 mb-0" @onclick="@(() => OnDeleteProduto(product.ProdutoId))">
                            <span class="oi oi-trash"></span>
                            Excluir
                        </button>
                        <button type="button" class="btn btn-link text-dark px-3 mb-0" @onclick="@(() => OnEditProduto(product))">
                            <span class="oi oi-pencil"></span>
                            Editar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-end">
                @for (int i = 1; i <= 5; i++)
                {
                    @if (i == PageNumber)
                    {
                        <li class="page-item disabled"><a class="page-link" href="produtos/@i">@i</a></li>
                    }
                    else if (i != PageNumber)
                    {
                        <li class="page-item"><a class="page-link" href="produtos/@i">@i</a></li>
                    }
                }
            </ul>
        </nav>
    </div>
}
<br />
<button type="button" class="btn bg-gradient-info button-align" @onclick="OnClickAddProduto">Novo Produto</button>

@code {
    [Parameter]
    public int PageNumber { get; set; }

    private IPagedList<CoreBusiness.Produto> produtos;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        produtos = ProdutosToPaged.Execute(PageNumber, 7);
    }

    protected override async Task OnParametersSetAsync()
    {
        if (PageNumber < 1) PageNumber = 1;
        produtos = ProdutosToPaged.Execute(PageNumber, 7);
    }

    private void OnClickAddProduto()
    {
        NavigationManager.NavigateTo("/produtos/NovoProduto");
    }

    private void OnEditProduto(Produto produto)
    {
        NavigationManager.NavigateTo($"/editarproduto/{produto.ProdutoId}");
    }

    private void OnDeleteProduto(int produtoId)
    {
        DeleteProduto.Execute(produtoId);
    }
}
