@page "/produtos/{PageNumber:int?}"
@attribute [Authorize(Policy = "Admin")]

@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@inject IViewProdutos ViewProdutos
@inject IGetCategoryById GetCategoryById
@inject IDeleteProduto DeleteProduto
@inject IGetProdutosToPaged ProdutosToPaged

<h3>Produtos</h3>
<br />
@if (produtos != null)
{
    <table id="produtos" class="table table-bordered">
        <thead>
            <tr>
                <th>Código</th>
                <th>Categoria</th>
                <th>Nome</th>
                <th>Quantidade</th>
                <th>Preço</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @if(produtos.Count() == 0){
                <tr><td class="text-center" colspan="5">Nenhum produto registrado.</td></tr>
            }
            @foreach (var product in produtos)
            {
                <tr>
                    <td>@product.ProdutoId</td>
                    <td>@GetCategoryById.Execute(product.CategoryId.Value)?.Name</td>
                    <td>@product.Name</td>
                    <td>@product.Quantidade</td>
                    <td>@(string.Format("{0:c}", Math.Round(product.Preco.Value, 2)))</td>
                    <td>
                        <button type="button" class="btn btn-link text-danger px-3 mb-0" @onclick="@(() => OnDeleteProduto(product.ProdutoId, product.Name))">
                            <span class="oi oi-trash"></span>
                            Excluir
                        </button>
                        <button type="button" class="btn btn-link text-dark px-3 mb-0" @onclick="@(() => OnEditProduto(product))">
                            <span class="oi oi-pencil"></span>
                            Editar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    if (produtosAll > 7)
    {
        <div>
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    @for (int i = 1; i <= produtosPages; i++)
                    {
                        @if (i == PageNumber)
                        {
                            <li class="page-item disabled"><a class="page-link" href="produtos/@i">@i</a></li>
                        }
                        else if (i != PageNumber)
                        {
                            <li class="page-item"><a class="page-link" href="produtos/@i">@i</a></li>
                        }
                    }
                </ul>
            </nav>
        </div>
    }
}
<br />
<button type="button" class="btn bg-gradient-info button-align" @onclick="OnClickAddProduto">Novo Produto</button>

@code {
    [Parameter]
    public int? PageNumber { get; set; }

    private IPagedList<CoreBusiness.Produto> produtos;
    public decimal produtosAll { get; set; }
    public int produtosPages { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        PageNumber = PageNumber ?? 1;
        produtos = ProdutosToPaged.Execute(PageNumber, 7);

        produtosAll = ProdutosToPaged.ExecuteResult().Count();
        produtosPages = (int)Math.Ceiling(produtosAll / 7);
    }

    protected override async Task OnParametersSetAsync()
    {
        if (PageNumber < 1) PageNumber = 1;

        produtos = ProdutosToPaged.Execute(PageNumber, 7);
        produtosAll = ProdutosToPaged.ExecuteResult().Count();
        produtosPages = (int)Math.Ceiling(produtosAll / 7);
    }

    private void OnClickAddProduto()
    {
        NavigationManager.NavigateTo("/produtos/NovoProduto");
    }

    private void OnEditProduto(Produto produto)
    {
        NavigationManager.NavigateTo($"produtos/editarproduto/{produto.ProdutoId}");
    }

    private async void OnDeleteProduto(int produtoId, string nome)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Tem certeza que deseja excluir o produto " + nome + "?");
        if (confirmed)
        {
            DeleteProduto.Execute(produtoId);
        }
    }
}
