@page "/editarproduto/{produtoId}"
@attribute [Authorize(Policy = "Admin")]

@inject NavigationManager NavigationManager
@inject IAddProduto IAddProduto
@inject IGetCategoryById GetCategoryById
@inject IGetProdutoById GetProdutoById
@inject IEditProduto EditProduto
@inject IViewCategoriesUseCase ViewCategoriesUseCase

<h3>Editar Produto</h3>
<br />
@if (produto != null)
{

    <EditForm Model="produto" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Nome</label>
            <InputText id="name" @bind-Value="produto.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="category">Descrição</label>
            <select id="category" @bind="produto.CategoryId" class="form-control">
                <option selected></option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.CategoryId">@cat.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="quantidade">Quantidade</label>
            <InputNumber id="quantidade" @bind-Value="produto.Quantidade" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label for="preco">Quantidade</label>
            <InputNumber id="preco" @bind-Value="produto.Preco" @bind-Value:format="F2" class="form-control"></InputNumber>
        </div>

        <button type="submit" class="btn btn-primary">Salvar</button>
        <button type="button" class="btn btn-danger" @onclick="OnCancel">Cancelar</button>
    </EditForm>

}

@code {
    [Parameter]
    public string ProdutoId { get; set; }
    private Produto produto;
    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        categories = ViewCategoriesUseCase.Execute();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (int.TryParse(this.ProdutoId, out int iProdutoId))
        {
            var prod = GetProdutoById.Execute(iProdutoId);
            this.produto = new Produto
            {
                ProdutoId = prod.ProdutoId,
                Name = prod.Name,
                CategoryId = prod.CategoryId,
                Quantidade = prod.Quantidade,
                Preco = prod.Preco
            };
        }
    }

    private void OnValidSubmit()
    {
        EditProduto.Execute(this.produto);
        NavigationManager.NavigateTo("/produtos");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/produtos");
    }
}
