@page "/caixa_console"
@attribute [Authorize(Policy = "Caixa")]

@if (!string.IsNullOrWhiteSpace(caixaNome))
{
    <div class="row">
        <div class="col-8">
            <h3>Caixa</h3>
        </div>
        <div class="col-1.5">
            <label style="line-height: 2.2;" for="caixa">Nome do Caixa:</label>
        </div>
        <div class="col-2">
            <div class="form-group">
                <input type="text" id="caixa" class="form-control" @bind-value="caixaNome" />
            </div>
        </div>
    </div>


    <br />

    <div class="row">
        <div class="col-4">
            <SelectProdutoForSellingComponent OnProdutoSelected="SelectedProduto"></SelectProdutoForSellingComponent>

            <VenderProdutoComponent CaixaNome="@caixaNome"
                                    SelectedProduto="selectedProduto"
                                    OnProdutoVendido="SellProduto">
            </VenderProdutoComponent>
        </div>
        <div class="col">
            <br />
            <TodayTransactionsComponent @ref="transactionComponent"></TodayTransactionsComponent>
        </div>
    </div>
 }

@code {
    private TodayTransactionsComponent transactionComponent;

    private Produto selectedProduto;
    private string caixaNome;

    [CascadingParameter]
    private Task<AuthenticationState> _authState { get; set; }

    private AuthenticationState authState;

    protected override async Task OnInitializedAsync()
    {
        authState = await _authState;
        caixaNome = authState.User.Identity.Name;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
        {
            transactionComponent.LoadTransactions(caixaNome);
        }
    }

    private void SelectedProduto(Produto produto)
    {
        selectedProduto = produto;
    }

    private void SellProduto(Produto produto)
    {
        transactionComponent.LoadTransactions(caixaNome);
    }

}
