@page "/editarcategoria/{categoryId}"
@inject NavigationManager NavigationManager
@inject IAddCategoryUseCase INewCategoryUseCase
@inject IGetCategoryById GetCategoryById
@inject IEditCategory EditCategory

<h3>Editar Categoria</h3>
<br/>
@if (category != null)
{

    <EditForm Model="category" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Nome</label>
            <InputText id="name" @bind-Value="category.Name" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="descript">Descrição</label>
            <InputText id="descript" @bind-Value="category.Description" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary">Salvar</button>
        <button type="button" class="btn btn-danger" @onclick="OnCancel">Cancelar</button>
    </EditForm>

}

@code {
    [Parameter]
    public string CategoryId { get; set; }

    private Category category;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if(int.TryParse(this.CategoryId, out int iCategoryId))
        {
            var cat = GetCategoryById.Execute(iCategoryId);
            this.category = new Category { CategoryId = cat.CategoryId, Name = cat.Name, Description = cat.Description };
        }
    }

    private void OnValidSubmit()
    {
        EditCategory.Execute(this.category);
        NavigationManager.NavigateTo("/categorias");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/categorias");
    }
}
